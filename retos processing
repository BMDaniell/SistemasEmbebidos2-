/*
* CAPITULO 6: DISEÑO DE INTERFACES
* DEBER 6.1 : RETOS DE PROCESSING
* OBJETIVO : MOSTRAR EL FUNCIONAMIENTO DE ALGUNAS FUNCIONES EN PROCESSING
* NOMBRE : Benavides Daniel
*/

// RETO NUMERO 1

void setup(){ 
size(500,500);
background(#000000);
}
void draw(){
  fill(255,69,0);
  stroke(255,69,0);
  rect(10,10,480,480);
  strokeWeight(6);
  stroke(0,0,128);
  line(10,10,490,490);
  line(10,490,490,10);
  fill(#FFFFFF);
  stroke(#FFFFFF);
  ellipse(250,250,400,400);
  fill(255,0,0);
  stroke(#00FF00);
  ellipse(250,250,300,300);
}

/*
* CAPITULO 6: DISEÑO DE INTERFACES
* DEBER 6.1 : RETOS DE PROCESSING
* OBJETIVO : MOSTRAR EL FUNCIONAMIENTO DE ALGUNAS FUNCIONES EN PROCESSING
* NOMBRE : Benavides Daniel
*/
// RETO NUMERO 2
void setup() {
size(300, 300);
background(#C0C0C0);
textAlign(CENTER);
textSize(20);
fill(0,0,0);
text("Presione el Botón para", 150,30);
text("Encender o Apagar el LED ", 150,50);
}
void draw() {
}
void mousePressed() {
background(#C0C0C0);
text("Presione el Botón para", 150,30);
text("Encender o Apagar el LED ", 150,50);
if ( mouseButton == LEFT) {
fill(#008000);
ellipse(150,150,150,150);
}
if (mouseButton == RIGHT) {
fill(#800000);
ellipse(150,150,150,150);
}
}
void mouseReleased() {
background(#C0C0C0);
text("Presione el Botón para", 150,30);
text("Encender o Apagar el LED ", 150,50);
fill(255,0,0);
ellipse(150,150,150,150);
fill(255,255,255);
text("¡Apagado!",
width/2, height/2);
if(mouseButton==RIGHT){
fill(#00FF00);
ellipse(150,150,150,150);
fill(255,255,255);
text("¡Encendido!",
width/2, height/2);
}
}
/*void mouseMoved() {
background(#C0C0C0);
text("El mouse fue movido",
width/2, height/2);
}*/
